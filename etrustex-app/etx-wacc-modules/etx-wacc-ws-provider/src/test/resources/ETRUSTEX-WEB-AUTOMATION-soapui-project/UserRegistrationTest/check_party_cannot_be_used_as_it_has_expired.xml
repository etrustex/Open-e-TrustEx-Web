<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="e4625123-cc41-4f3c-9fa9-d12f677adfb2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="check_party_is_not_expired" searchProperties="true" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="583ec887-eefe-48a6-b604-47287b67e9bdfileName">check_standard_incoming_message_is_correctly_persisted</con:setting><con:setting id="51a63d03-2822-40b6-9f58-eb6899d5dbf0fileName">check_signed_message_one_attachment_one_payload_is_correctly_persisted</con:setting><con:setting id="2c021a08-9d90-4ccd-9403-82b8176e7994fileName">check_READ_messageStatus_is_correctly_persisted</con:setting><con:setting id="4bdd89ac-d9d1-48e2-9d45-dbd301f205a5fileName">check_assign_a_party_to_one_user</con:setting><con:setting id="94fd5216-cc10-4ea2-be09-d5d6dbeab5e2fileName">check_assign_one_party_to_one_user</con:setting><con:setting id="e4625123-cc41-4f3c-9fa9-d12f677adfb2fileName">check_party_cannot_be_used_as_it_has_expired</con:setting></con:settings><con:testStep type="groovy" name="submit_check_party_is_not_expired" id="063b0ea2-d716-442b-b50a-df158f10153e"><con:settings/><con:config><script>	
	import groovy.sql.Sql
	import java.text.SimpleDateFormat

	// initialise DB driver
	com.eviware.soapui.support.GroovyUtils.registerJdbcDriver("oracle.jdbc.OracleDriver")

	// load methods from repository
	scripts = testRunner.testCase.testSuite.project.testSuites["SCRIPTS"]
	scripts.testCases["METHODS"].testSteps["METHODS"].run(testRunner, context)

	log.debug "================================================================================"
	log.info "USER REGISTRATION - ASSIGN USER - START CHECKING THAT PARTY IS NOT EXPIRED AFTER EXCEEDING THE OLD EXPIRATION LIMIT"

	long businessId = 10000001	
	long partyId = 1000001
	String receiverPartyName = "ROBOT_APP_PARTY"	
	String businessName = "TEST"
	String application = "TEST"
	String partyName = "WEB_SENDER_PARTY1"
	String userLogin = "cholaarX"
	String firstName = "Armen"
	String lastName = "Cholakian"
	String userEmail = "armo@chocko.com"


	// open DB connection
	context.commonDao.openDbConnection()
	
	try{
		
		// create business on business table
		context.commonDao.createBusiness(businessId, businessName)
	
		// create business config on business config table
		context.commonDao.createBusinessConfig(1000001, businessId, "etx.business.receiver.node.party.name", "ROBOT_APP_PARTY")
		context.commonDao.createBusinessConfig(1000002, businessId, "etx.business.warn.email.notif.enabled", "0")
		context.commonDao.createBusinessConfig(1000003, businessId, "etx.business.custom.view.name", "edma")	
		
		// create party on party table - expire the party with a sysdate that is 40 days old
		context.commonDao.createParty(partyId, "sysdate-50", partyName, businessId)

		// reset cache
		context.commonDao.resetCacheWeb()

		// inject values into assign user request
		testRunner.testCase.testSuite.setPropertyValue('USER_LOGIN', userLogin)
		testRunner.testCase.testSuite.setPropertyValue('PARTY_ID', partyName)
		testRunner.testCase.testSuite.setPropertyValue('APPLICATION', application)
		testRunner.testCase.testSuite.setPropertyValue('FIRST_NAME', firstName)
		testRunner.testCase.testSuite.setPropertyValue('LAST_NAME', lastName)
		testRunner.testCase.testSuite.setPropertyValue('USER_EMAIL', userEmail)

		// define the webservice - assign user
		def testCase = testRunner.testCase.testSuite.testCases["webService_UserRegistrationService"]
		def testStep = testCase.testSteps["assignUserParty"]

		// EXECUTE SENDING REQUEST TO THE ASSIGN USER WEBSERVICE
		testStep.run(testRunner, context)

		// define the webservice response for assign user
		context.setProperty('xmlResponse', testStep.getProperty('response'))
		
		// parse the response code from the webservice response
		def assignUserActualResponse = context.expand( '${xmlResponse#declare namespace ns1=\'http://ec.europa.eu/etrustex/webapp/service/admin/userregistration/v1.0\'; //ns1:assignUserPartyResp[1]/ns1:status[1]}' )

		// check that the response code from the webservice is "success"
		assert assignUserActualResponse != "PARTY_EXPIRED"	

		
	} finally {

		// delete user role from the web user role table
		context.commonDao.deleteUserRole(partyId)

		// delete user from the business user config table
		context.commonDao.deleteBusinessUserConfig(businessId)

		// delete user from the web user table
		context.commonDao.deleteUser(userLogin)

		// delete party from party table
		context.commonDao.deleteParty(partyName)
		
		// delete business config from business config table
		context.commonDao.deleteBusinessConfig(businessId)
	
		// delete business from business table
		context.commonDao.deleteBusiness(businessId)

		// close DB connection
		context.commonDao.closeDbConnection()

		// reset cache
		context.commonDao.resetCacheWeb()
				
	}

	log.info "USER REGISTRATION - ASSIGN USER - FINISHED CHECKING THAT PARTY IS NOT EXPIRED AFTER EXCEEDING THE OLD EXPIRATION LIMIT"
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase>