package ec.services.wsdl.documentbundle_2;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.10
 * 2018-04-19T14:23:42.819+02:00
 * Generated source version: 3.1.10
 * 
 */
@WebServiceClient(name = "documentBundleService", 
                  wsdlLocation = "classpath:wsdl/DocumentBundle-2.0.wsdl",
                  targetNamespace = "ec:services:wsdl:DocumentBundle-2") 
public class DocumentBundleService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("ec:services:wsdl:DocumentBundle-2", "documentBundleService");
    public final static QName DocumentBundlePort = new QName("ec:services:wsdl:DocumentBundle-2", "documentBundlePort");
    static {
        URL url = DocumentBundleService.class.getClassLoader().getResource("wsdl/DocumentBundle-2.0.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(DocumentBundleService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/DocumentBundle-2.0.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public DocumentBundleService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DocumentBundleService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DocumentBundleService() {
        super(WSDL_LOCATION, SERVICE);
    }
    




    /**
     *
     * @return
     *     returns DocumentBundlePortType
     */
    @WebEndpoint(name = "documentBundlePort")
    public DocumentBundlePortType getDocumentBundlePort() {
        return super.getPort(DocumentBundlePort, DocumentBundlePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DocumentBundlePortType
     */
    @WebEndpoint(name = "documentBundlePort")
    public DocumentBundlePortType getDocumentBundlePort(WebServiceFeature... features) {
        return super.getPort(DocumentBundlePort, DocumentBundlePortType.class, features);
    }

}
