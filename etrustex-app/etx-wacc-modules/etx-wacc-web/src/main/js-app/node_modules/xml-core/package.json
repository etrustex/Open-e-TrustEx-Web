{
  "_args": [
    [
      {
        "raw": "xml-core@^1.0.12",
        "scope": null,
        "escapedName": "xml-core",
        "name": "xml-core",
        "rawSpec": "^1.0.12",
        "spec": ">=1.0.12 <2.0.0",
        "type": "range"
      },
      "C:\\Pgm\\workspaces\\etx-web\\etrustex-app\\etx-wacc-modules\\etx-wacc-web\\src\\main\\webapp\\node_modules\\xmldsigjs"
    ]
  ],
  "_from": "xml-core@>=1.0.12 <2.0.0",
  "_id": "xml-core@1.0.13",
  "_inCache": true,
  "_location": "/xml-core",
  "_nodeVersion": "8.9.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/xml-core_1.0.13_1518861317877_0.9978603653418516"
  },
  "_npmUser": {
    "name": "microshine",
    "email": "microshine@mail.ru"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xml-core@^1.0.12",
    "scope": null,
    "escapedName": "xml-core",
    "name": "xml-core",
    "rawSpec": "^1.0.12",
    "spec": ">=1.0.12 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/xmldsigjs"
  ],
  "_resolved": "http://diplazium.cc.cec.eu.int:8081/repository/npm-all/xml-core/-/xml-core-1.0.13.tgz",
  "_shasum": "e0b88f5b99b81128170f8e519ec54be9c4cebe06",
  "_shrinkwrap": null,
  "_spec": "xml-core@^1.0.12",
  "_where": "C:\\Pgm\\workspaces\\etx-web\\etrustex-app\\etx-wacc-modules\\etx-wacc-web\\src\\main\\webapp\\node_modules\\xmldsigjs",
  "author": {
    "name": "microshine"
  },
  "bugs": {
    "url": "https://github.com/PeculiarVentures/xml-core.git/issues"
  },
  "dependencies": {
    "@types/node": "^8.9.4",
    "xmldom-alpha": "^0.1.28",
    "xpath.js": "^1.1.0"
  },
  "description": "`xml-core` is a set of classes that make it easier to work with XML within the browser and node.",
  "devDependencies": {
    "@types/mocha": "^2.2.48",
    "coveralls": "^3.0.0",
    "mocha": "^4.1.0",
    "nyc": "^11.5.0",
    "rollup": "^0.53.4",
    "rollup-plugin-babel": "^3.0.3",
    "rollup-plugin-typescript": "^0.8.1",
    "typescript": "^2.7.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-8Y+fwZZXYyRjpCowXhYpASHXMaer0HkziSiZnNjd+mm2sVvred+Wy9rEAxOmy6x6EVRBO0shnuzZKZKA/t6/DQ==",
    "shasum": "e0b88f5b99b81128170f8e519ec54be9c4cebe06",
    "tarball": "http://diplazium.cc.cec.eu.int:8081/repository/npm-all/xml-core/-/xml-core-1.0.13.tgz",
    "fileCount": 16,
    "unpackedSize": 184524
  },
  "gitHead": "53b2520bfb75d63b609b588cee63788724652fac",
  "homepage": "https://github.com/PeculiarVentures/xml-core.git#readme",
  "jsnext:main": "lib/index.js",
  "keywords": [
    "xml"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "microshine",
      "email": "microshine@mail.ru"
    }
  ],
  "module": "lib/index.js",
  "name": "xml-core",
  "optionalDependencies": {},
  "readme": "\r\n# xml-core\r\n\r\n`xml-core` is a set of classes that make it easier to work with XML within the browser and node.\r\n\r\n[![license](https://img.shields.io/badge/license-MIT-green.svg?style=flat)](https://raw.githubusercontent.com/PeculiarVentures/xml-core/master/LICENSE) [![CircleCI](https://circleci.com/gh/PeculiarVentures/xml-core.svg?style=svg)](https://circleci.com/gh/PeculiarVentures/xml-core)\r\n[![Coverage Status](https://coveralls.io/repos/github/PeculiarVentures/xml-core/badge.svg?branch=master)](https://coveralls.io/github/PeculiarVentures/xml-core?branch=master)\r\n[![NPM version](https://badge.fury.io/js/xml-core.png)](http://badge.fury.io/js/xml-core)\r\n\r\n[![NPM](https://nodei.co/npm/xml-core.png)](https://nodei.co/npm/xml-core/)\r\n\r\n\r\n## Introduction\r\n\r\nWe wanted to be able to validate [XAdES](https://en.wikipedia.org/wiki/XAdES) in the browser, specifically so we could validate the signature on the [EU Trust List](https://github.com/PeculiarVentures/tl-create).\r\n\r\n\r\nThis lead us to the creation od [XMLDSIGjs](https://github.com/PeculiarVentures/xmldsigjs) which allows us to validate XML and [XAdESjs](https://github.com/PeculiarVentures/xadesjs) which extends it and enables us to validate XAdES signatures.\r\n\r\nWe use `xml-core` to make the creation of these libraries easier, we hope you may find it valuable in your own projects also. \r\n\r\nFundementally `xml-core` provides a way to transform XML to JSON and JSON to XML, which enables you to enforce a schema on the associated XML. The goal of this is to let you work naturally with XML in Javascript.\r\n\r\nIt is similar to [xmljs](https://www.npmjs.com/package/xmljs) but has a few differences -\r\n- Can convert the JSON back to XML,\r\n- Uses [decorators](https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841#.61eut6wa9) to make enforcing schema in Javascript more natural. \r\n\r\n## Install\r\n\r\n```\r\nnpm install xml-core\r\n```\r\n\r\n## Using\r\n\r\n### ES5\r\n\r\n```javascript\r\nvar XmlCore = require(\"xml-core\");\r\n```\r\n\r\n### ES2015\r\n\r\n```javascript\r\nimport XmlCore from \"xml-core\";\r\n```\r\n\r\n## Decrators\r\n\r\nInformation about decorators [ES2015](https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841#.qnl62mocp), [TypeScript](https://www.typescriptlang.org/docs/handbook/decorators.html)\r\n\r\n### XmlElement\r\n\r\nClass decorator which allows to describe schema for xml element\r\n\r\n__Paramteres__\r\n\r\n| Name | Description |\r\n|:----------------|:--------------------------------------------------------------------------------| \r\n| localName       | Sets a local name for xml element. Default value is name of Class               |\r\n| namespaceURI    | Sets a namespace URI for xml element. Default value is `null`                   |\r\n| prefix          | Sets a prefix for xml element. Default value is `null`                          |\r\n| parser          | Sets a parser as `XmlObject` for each child element of `XmlCollection`. Optional|\r\n\r\n### XmlAttribute\r\n\r\nProperty decorator which allows to describe schema for attribute of xml element\r\n\r\n__Paramteres__\r\n\r\n| Name | Description |\r\n|:----------------|:--------------------------------------------------------------------------------| \r\n| localName       | Sets a local name for xml element. Default value is name of Property            |\r\n| namespaceURI    | Sets a namespace URI for xml element. Default value is `null`                   |\r\n| prefix          | Sets a prefix for attribute of xml element. Default value is `null`             |\r\n| defaultValue    | Sets a default value for attribute of xml element. Optional                     |\r\n| required        | Determines if attribute of xml element is required. Default value is `false`    |\r\n| converter       | Sets a specific converter for attribute of xml element. Default is simple text  |\r\n\r\n\r\n### XmlChildElement\r\n\r\nProperty decorator which allows to describe schema for child element of xml element\r\n\r\n__Paramteres__\r\n\r\n| Name | Description |\r\n|:----------------|:--------------------------------------------------------------------------------| \r\n| localName       | Sets local name for xml element. Default value is name of Class                 |\r\n| namespaceURI    | Sets namespace URI for xml element. Default value is `null`                     |\r\n| prefix          | Sets prefix for xml element. Default value is `null`                            |\r\n| defaultValue    | Sets a default value for attribute of xml element. Optional                     |\r\n| required        | Determines if child element is required. Default value is `false`               |\r\n| converter       | Sets a specific converter for child element. Default is simple text             |\r\n| parser          | Sets parser as `XmlObject` for child element. Optional                          |\r\n| minOccurs       | Sets a min value for child element occurs. Default value is `0`                 |\r\n| maxOccurs       | Sets a max value for child element occurs. Default value is `MAX`               |\r\n| noRoot          | Determines if parser as `XmlCollection` must return it's children to parent element |\r\n\r\n### XmlContent\r\n\r\nProperty decorator which allows to describe schema for content of xml element\r\n\r\n__Paramteres__\r\n\r\n| Name | Description |\r\n|-----------------|---------------------------------------------------------------------------------| \r\n| defaultValue    | Sets a default value for content of xml element. Optional                       |\r\n| required        | Determines if content of xml element is required. Default value is `false`      |\r\n| converter       | Sets a specific converter for content of xml element. Default is simple text    |\r\n\r\n## XmlObject\r\n\r\nBase class for XML elements.\r\n\r\n### LoadXml\r\n\r\nReads XML from string\r\n\r\n```typescript\r\nLoadXml(node: Node | string): void;\r\nstatic LoadXml(node: Node | string): this;\r\n```\r\n\r\n### GetXml\r\n\r\nWrites object to XML node\r\n\r\n```typescript\r\nGetXml(): Node | null;\r\n```\r\n\r\n### toString\r\n\r\nWrites object to string\r\n\r\n```\r\ntoString(): string;\r\n```\r\n\r\n__Example__\r\n\r\nTarget XML [schema]()\r\n\r\n```xml\r\n<element name=\"Signature\" type=\"ds:SignatureType\"/>\r\n<complexType name=\"SignatureType\">\r\n  <sequence>\r\n    <element ref=\"ds:SignedInfo\"/>\r\n    <element ref=\"ds:SignatureValue\"/>\r\n    <element ref=\"ds:KeyInfo\" minOccurs=\"0\"/>\r\n    <element ref=\"ds:Object\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\r\n  </sequence>\r\n  <attribute name=\"Id\" type=\"ID\" use=\"optional\"/>\r\n</complexType>\r\n```\r\n\r\nTypeScript implementation of XML schema\r\n\r\n```typescript\r\nimport { XmlObject, XmlBase64Converter } from \"xml-core\";\r\n\r\n@XmlElement({\r\n    localName: \"Signature\",\r\n    namespaceURI: \"http://www.w3.org/2000/09/xmldsig#\",\r\n    prefix: \"ds\"\r\n})\r\nclass Signature extends XmlObject {\r\n\r\n    @XmlAttribute({\r\n        localName: XmlSignature.AttributeNames.Id,\r\n        defaultValue: \"\",\r\n    })\r\n    public Id: string;\r\n\r\n    @XmlChildElement({\r\n        parser: SignedInfo,\r\n        required: true,\r\n    })\r\n    public SignedInfo: SignedInfo;\r\n\r\n    @XmlChildElement({\r\n        localName: \"SignatureValue\",\r\n        namespaceURI: \"http://www.w3.org/2000/09/xmldsig#\",\r\n        prefix: \"ds\",\r\n        required: true,\r\n        converter: XmlBase64Converter,\r\n        defaultValue: null,\r\n    })\r\n    public SignatureValue: Uint8Array | null;\r\n\r\n    @XmlChildElement({\r\n        parser: KeyInfo\r\n    })\r\n    public KeyInfo: KeyInfo;\r\n\r\n    @XmlChildElement({\r\n        parser: DataObjects,\r\n        noRoot: true\r\n    })\r\n    public ObjectList: DataObjects;\r\n\r\n}\r\n```\r\n\r\n__Using__\r\n\r\n```typescript\r\nconst signature = new Signature();\r\n\r\n// Read XML\r\nsignature.LoadXml(Signature.Parse('<ds:Signature Id=\"sigId\">...</ds:signature>'));\r\nconsole.log(\"Id:\", signature.Id); // Id: sigId\r\n\r\n// Write XML\r\nsignature.Id = \"newId\";\r\nconsole.log(signature.toString()); // <ds:Signature Id=\"sigId\">...</ds:signature>\r\n```\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/PeculiarVentures/xml-core.git"
  },
  "scripts": {
    "build": "npm run build:lib && npm run build:es5 && npm run build:test",
    "build:es5": "rollup -c",
    "build:lib": "rollup -c rollup.config.lib.js",
    "build:map": "rollup -c -m",
    "build:source": "tsc -p src --declaration --declarationDir types",
    "build:test": "tsc -p test",
    "clean": "rm -rf build/ buildjs/ coverage/ .nyc_output/ npm-debug.log npm-debug.log.*",
    "coverage": "nyc npm test",
    "coveragehtml": "nyc report -r html",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "precoveragehtml": "npm run coverage",
    "prepub": "npm run build",
    "prepublish": "npm run build",
    "pretest": "npm run build:test && npm run build:map",
    "pub": "npm version patch && npm publish && git push",
    "test": "mocha ./test"
  },
  "types": "index.d.ts",
  "version": "1.0.13"
}
