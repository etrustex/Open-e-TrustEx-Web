<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>eu.europa.ec.digit.etrustex</groupId>
    <artifactId>etrustex-mock-ws</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <prerequisites>
        <maven>3.0</maven>
    </prerequisites>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Displayed on the UI -->
        <etrustex.mock.ws.version>1.0.0</etrustex.mock.ws.version>
        <slf4j.version>1.7.21</slf4j.version>
        <jackson.version>2.9.0</jackson.version>
        <servlet.version>2.5</servlet.version>
        <ecas.version>4.8.1</ecas.version>
        <springfox-version>2.5.0</springfox-version>

        <spring.boot.version>1.5.6.RELEASE</spring.boot.version>
    </properties>


    <dependencies>

        <dependency>
            <groupId>eu.europa.ec.digit.etrustex</groupId>
            <artifactId>etrustex-mobile</artifactId>
            <version>1.0.0-SNAPSHOT</version>
            <classifier>ui
            </classifier> <!-- Must match the classifier specified in assembly_dep.xml file in aggregator-ionic project -->
            <type>zip</type>
            <scope>provided</scope>
        </dependency>

        <!-- provided by Weblogic -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- JSTL for JSP -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- ECAS -->
        <dependency>
            <groupId>eu.europa.ec.digit.iam.ecas.client</groupId>
            <artifactId>ecas-weblogic-10.3-authprovider</artifactId>
            <version>${ecas.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
                <!-- we want slf4j instead-->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-websocket</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!--SpringFox dependencies -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Bean Validation API support -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.1.0.Final</version>
            <scope>provided</scope>
        </dependency>

        <!-- Logging (slf4j) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!--
            Needed to GZIP the HTTP response content.
            NOTE: Webgate servers are compressing content automatically.
        <dependency>
            <groupId>com.github.ziplet</groupId>
            <artifactId>ziplet</artifactId>
            <version>2.2.0</version>
        </dependency>
         -->
    </dependencies>


    <!-- Build information specified for all sub-modules -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.9</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>

            <!-- Use plugin for getting a time relative to specified timezone. By default Maven generates the time relative to GMT -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>build.timestamp</name>
                            <pattern>yyyy-MM-dd HH:mm:ss</pattern>
                            <locale>en_US</locale>
                            <timeZone>Europe/Paris</timeZone>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Unzip dependency zip file from project etrustex-mobile.
                NOTE: This config needs to be in sync with the one for maven-war-plugin plugin
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <!-- -->
                            <outputDirectory>${project.build.directory}\etrustex-mobile</outputDirectory>
                            <includeArtifactIds>etrustex-mobile</includeArtifactIds>
                            <includeGroupIds>${project.groupId}</includeGroupIds>
                            <excludeTransitive>true</excludeTransitive>
                            <!--use as much as needed to be specific...also scope,type,classifier etc-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <!--  manifest customizations -->
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Build-Time>${maven.build.timestamp}</Build-Time>
                        </manifestEntries>
                    </archive>

                    <webResources>
                        <!-- filter according to the environment -->
                        <resource>
                            <filtering>true</filtering>
                            <directory>${basedir}/src/main/webapp</directory>
                            <includes>
                                <include>WEB-INF/web.xml</include>
                            </includes>
                        </resource>

                        <!--
                            Include files unziped from dependency project.
                            NOTE: This config needs to be in sync with the one for maven-dependency-plugin
                        -->
                        <resource>
                            <directory>${project.build.directory}\etrustex-mobile</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </resource>

                    </webResources>
                </configuration>
            </plugin>

        </plugins>

        <!-- Specify classpath resources for all sub-modules -->
        <resources>
            <!-- Default resources folder -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

    </build>

</project>